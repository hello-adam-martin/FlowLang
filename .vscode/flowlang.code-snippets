{
  "FlowLang Flow Template": {
    "prefix": "flow",
    "body": [
      "flow: ${1:FlowName}",
      "description: ${2:Description of what this flow does}",
      "",
      "inputs:",
      "  - name: ${3:input_name}",
      "    type: ${4|string,int,number,boolean,object,array|}",
      "    required: ${5|true,false|}",
      "",
      "steps:",
      "  - task: ${6:TaskName}",
      "    id: ${7:step_id}",
      "    inputs:",
      "      ${8:param}: \\${inputs.${3}}",
      "    outputs:",
      "      - ${9:result}",
      "",
      "outputs:",
      "  - name: ${10:output_name}",
      "    value: \\${${7}.${9}}"
    ],
    "description": "Complete FlowLang flow template"
  },
  "Task Step": {
    "prefix": "task",
    "body": [
      "- task: ${1:TaskName}",
      "  id: ${2:step_id}",
      "  inputs:",
      "    ${3:param}: ${4:value}",
      "  outputs:",
      "    - ${5:result}"
    ],
    "description": "Single task execution step"
  },
  "Conditional Task Step": {
    "prefix": "taskif",
    "body": [
      "- task: ${1:TaskName}",
      "  id: ${2:step_id}",
      "  if: ${3:condition}",
      "  inputs:",
      "    ${4:param}: ${5:value}",
      "  outputs:",
      "    - ${6:result}"
    ],
    "description": "Conditional task step"
  },
  "Parallel Execution": {
    "prefix": "parallel",
    "body": [
      "- parallel:",
      "    - task: ${1:Task1}",
      "      id: ${2:step1}",
      "      inputs:",
      "        ${3:param}: ${4:value}",
      "    - task: ${5:Task2}",
      "      id: ${6:step2}",
      "      inputs:",
      "        ${7:param}: ${8:value}"
    ],
    "description": "Parallel step execution"
  },
  "Conditional If/Then/Else": {
    "prefix": "conditional",
    "body": [
      "- if: ${1:condition}",
      "  then:",
      "    - task: ${2:TrueTask}",
      "      id: ${3:true_step}",
      "      inputs:",
      "        ${4:param}: ${5:value}",
      "  else:",
      "    - task: ${6:FalseTask}",
      "      id: ${7:false_step}",
      "      inputs:",
      "        ${8:param}: ${9:value}"
    ],
    "description": "If/then/else conditional block"
  },
  "Switch/Case": {
    "prefix": "switch",
    "body": [
      "- switch: \\${${1:variable}}",
      "  cases:",
      "    - when: ${2:value1}",
      "      do:",
      "        - task: ${3:HandleValue1}",
      "          id: ${4:case1}",
      "    - when: ${5:value2}",
      "      do:",
      "        - task: ${6:HandleValue2}",
      "          id: ${7:case2}",
      "    - default:",
      "        - task: ${8:HandleDefault}",
      "          id: ${9:default_case}"
    ],
    "description": "Multi-way switch/case branching"
  },
  "Switch Case (single)": {
    "prefix": "case",
    "body": [
      "- when: ${1:value}",
      "  do:",
      "    - task: ${2:TaskName}",
      "      id: ${3:step_id}"
    ],
    "description": "Single case for switch statement"
  },
  "Switch Default Case": {
    "prefix": "default",
    "body": [
      "- default:",
      "    - task: ${1:DefaultTask}",
      "      id: ${2:default_step}"
    ],
    "description": "Default case for switch statement"
  },
  "For Each Loop": {
    "prefix": "foreach",
    "body": [
      "- for_each: \\${${1:inputs.items}}",
      "  as: ${2:item}",
      "  do:",
      "    - task: ${3:ProcessItem}",
      "      id: ${4:process_step}",
      "      inputs:",
      "        data: \\${${2}}"
    ],
    "description": "For each loop over collection"
  },
  "Input Definition": {
    "prefix": "input",
    "body": [
      "- name: ${1:input_name}",
      "  type: ${2|string,int,number,boolean,object,array|}",
      "  required: ${3|true,false|}",
      "  description: ${4:Description}"
    ],
    "description": "Flow input parameter"
  },
  "Output Definition": {
    "prefix": "output",
    "body": [
      "- name: ${1:output_name}",
      "  value: \\${${2:step_id}.${3:result}}",
      "  description: ${4:Description}"
    ],
    "description": "Flow output value"
  },
  "Variable Reference (Inputs)": {
    "prefix": "varinput",
    "body": [
      "\\${inputs.${1:variable_name}}"
    ],
    "description": "Reference to flow input variable"
  },
  "Variable Reference (Step Output)": {
    "prefix": "varstep",
    "body": [
      "\\${${1:step_id}.${2:output_name}}"
    ],
    "description": "Reference to step output variable"
  },
  "Retry Configuration": {
    "prefix": "retry",
    "body": [
      "retry:",
      "  max_attempts: ${1:3}",
      "  delay_seconds: ${2:1}",
      "  backoff: ${3|fixed,exponential,linear|}"
    ],
    "description": "Retry configuration for a task"
  },
  "Task with Retry": {
    "prefix": "taskretry",
    "body": [
      "- task: ${1:TaskName}",
      "  id: ${2:step_id}",
      "  inputs:",
      "    ${3:param}: ${4:value}",
      "  retry:",
      "    max_attempts: ${5:3}",
      "    delay_seconds: ${6:1}"
    ],
    "description": "Task with retry configuration"
  },
  "Task with Error Handler": {
    "prefix": "taskerror",
    "body": [
      "- task: ${1:RiskyTask}",
      "  id: ${2:risky_step}",
      "  inputs:",
      "    ${3:param}: ${4:value}",
      "  on_error:",
      "    - task: ${5:HandleError}",
      "      id: ${6:error_handler}",
      "      inputs:",
      "        error: \\${${2}.error}"
    ],
    "description": "Task with error handler"
  },
  "Task with Dependencies": {
    "prefix": "taskdeps",
    "body": [
      "- task: ${1:TaskName}",
      "  id: ${2:step_id}",
      "  depends_on:",
      "    - ${3:step1}",
      "    - ${4:step2}",
      "  inputs:",
      "    ${5:param}: ${6:value}"
    ],
    "description": "Task with explicit dependencies"
  },
  "Complete Task with All Options": {
    "prefix": "taskfull",
    "body": [
      "- task: ${1:TaskName}",
      "  id: ${2:step_id}",
      "  if: ${3:condition}",
      "  inputs:",
      "    ${4:param}: ${5:value}",
      "  outputs:",
      "    - ${6:result}",
      "  depends_on:",
      "    - ${7:previous_step}",
      "  retry:",
      "    max_attempts: ${8:3}",
      "    delay_seconds: ${9:1}",
      "  timeout: ${10:30}",
      "  on_error:",
      "    - task: ${11:HandleError}",
      "      id: ${12:error_handler}"
    ],
    "description": "Task with all available options"
  }
}
