flow: UserAuth
description: User authentication with automatic registration - demonstrates branching and silent flags
silent: true  # Hide internal checks by default - only show user-facing operations

inputs:
  - name: email
    type: string
    required: true
    description: User email address

  - name: password
    type: string
    required: true
    description: User password

  - name: name
    type: string
    required: false
    description: Full name (required for new registrations)

steps:
  # Step 1: Check if user exists (silent - internal database check)
  - task: CheckUserExists
    id: check_user
    inputs:
      email: ${inputs.email}
    outputs:
      - exists

  # Step 2: Branch based on user existence
  - if: ${check_user.exists} == true
    then:
      # ========================================
      # EXISTING USER PATH - Login Flow
      # ========================================

      - task: ValidatePassword
        id: validate_pass
        silent: false  # Override flow-level: show authentication attempts
        inputs:
          email: ${inputs.email}
          password: ${inputs.password}
        outputs:
          - valid

      # Nested conditional: handle valid vs invalid password
      - if: ${validate_pass.valid} == true
        then:
          # Valid credentials - fetch user data in parallel
          - parallel:
              - task: FetchUserProfile
                id: profile
                silent: false  # Show profile fetch
                inputs:
                  email: ${inputs.email}
                outputs:
                  - user_data

              - task: FetchUserPreferences
                id: preferences
                # Inherits silent: true - hide preferences fetch
                inputs:
                  email: ${inputs.email}
                outputs:
                  - prefs

          # Generate authentication token
          - task: GenerateAuthToken
            id: token
            silent: false  # Show token generation
            inputs:
              email: ${inputs.email}
              user_id: ${profile.user_data.id}
            outputs:
              - token

        else:
          # Invalid password - log and fail
          - task: LogFailedLogin
            id: log_failure
            # Inherits silent: true - hide logging
            inputs:
              email: ${inputs.email}
              reason: invalid_password

    else:
      # ========================================
      # NEW USER PATH - Registration Flow
      # ========================================

      - task: ValidateRegistration
        id: validate_reg
        silent: false  # Show validation step
        inputs:
          email: ${inputs.email}
          password: ${inputs.password}
          name: ${inputs.name}
        outputs:
          - valid
          - validation_errors

      - task: CreateUserAccount
        id: create_user
        silent: false  # Show account creation
        inputs:
          email: ${inputs.email}
          password: ${inputs.password}
          name: ${inputs.name}
        outputs:
          - user_id
          - user_data

      - task: SendWelcomeEmail
        id: welcome_email
        silent: false  # Show welcome email
        inputs:
          email: ${inputs.email}
          name: ${inputs.name}
        outputs:
          - sent

      # Generate authentication token for new user
      - task: GenerateAuthToken
        id: token
        silent: false  # Show token generation
        inputs:
          email: ${inputs.email}
          user_id: ${create_user.user_id}
        outputs:
          - token

outputs:
  - name: success
    value: true

  - name: auth_token
    value: ${token.token}

  - name: is_new_user
    value: ${check_user.exists}
